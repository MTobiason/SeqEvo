//Sample input file - MT 2015/03/26
// All lines begining with a "//" are noted as comments, and ignored by the program

// **************************
// RandomizeDesign Parameters
// **************************

nd = 8 	// Number-of-Designs :: integer > 0 :: Number of randomized sequence designs to produce.
rrd = true 	// true|false :: Report-Randomized-Designs :: Export sequences from shuffled designs to the RS sub directory


// **********
// File Paths
// **********

DIFilePath = in.domains.txt	// Input file containing the domain information
SIFilePath = in.strands.txt	// Input file containing the strand information

//DOFilePath = out.domains.txt	// File to create which will contain the output domain information
//NOFilePath = out.network.txt	// File to create which will contain just the strand and domain sequence information.
//ROFilePath = out.report.txt	// File to create which will contain the program's full report
//SOFilePath = out.strands.txt	// File to create which will contain the output strand information
//TOFilePath = out.trajectory.csv	// File to create which will loge the score trajectories for each lineage.
//OOFilePath = out.occurrences.txt // File to create which will contain the # of WCI occurences found in the best/final design.

// **************
// Cycle Settings
// **************

//rflm = true	// true|false :: Report-Final-Lineage-Mothers ::Export sequences from "final generation" mothers to the screen and report file
//sflm = true 	// true or false :: Shuffle-First-Lineage-Mother :: False -> Lineage #1 starts as a clone of Gen 0. True -> Lineage #1 is randomly shuffled.
//solm = true 	// true or false :: Shuffle-Other-Lineage-Mothers :: False -> All lineages other than #1 start as a clone of generation 0. True -> All lineages other than #1 are radomly shuffled.

//nl = 8		// integer > 0 :: Number of 1st generation Mothers to spawn from generation 0. 
//cpl = 100	// integer > 0 :: Cycles-Per-Lineage :: Number of Sub-Cycles to include in each Lineage.
//gpc = 10	// integer > 0 :: Generations-Per-Cycle :: Generations per each "Cycle"
//mpc = 3		// integer > 0 :: Mother-Per-Cycle :: Number of mothers in each Cycle.
//mpm = 1		// integer > 0 :: Mutations-Per-Mother :: Number of times the first generation in a cycle is mutated.
//dpm = 3		// integer > 0 :: Daughters-Per-Mother :: Number of daughters spawned from each mother.
//mpd = 1		// integer > 0 :: Mutations-Per-Daughter :: Number of times a mother is mutated to make a daughter.
//nt = auto		// integer > 0 -or- "auto" :: Number of Threads. Number of computing threads used durring computations.

//MaxShuffleAttempts = 1000 	// integer > 0 :: Maximum number of failed (invalid) attempts to shuffle the first lineage mothers before terminating the algorithm.
//MaxTranspositionAttempts = 1000 // integer > 0 :: Maximum number of failed (invalid) attempts to Transpose a mother design before printing a warning and continueing.
//MaxMutationAttempts = 1000 	// integer > 0 :: Maximum number of failed (invalid) attempts to mutate a daughter design before printing a warning and continueing.



// ***************
// Scoring Wieghts
// ***************

IntramolecularW = 20	// integer > 0 :: weighting factor for compliments between a given strand and itself
IntermolecularW = 1	// integer > 0 :: weighting factor for compliments between two given strands

// ****************
// Scoring Criteria
// ****************

IntramolecularSLC = 2 	// integer >= 1 :: Complements within a single strand with length greather than or equal to this SLC contribute to a design's score.
IntermolecularSLC = 3	// integer >= 1 :: Complements between 2 strands with length greather than or equal to this SLC contribute to a design's score.

AASLC = 7	// integer >= 1 :: Any stretch of consecutive A's larger greater than or equal to AASLC will flag a design/mutation as invalid. 
CCSLC = 4 	// integer >= 1 :: Any stretch of consecutive C's larger greater than or equal to CCSLC will flag a design/mutation as invalid. 
GGSLC = 4	// integer >= 1 :: Any stretch of consecutive G's larger greater than or equal to GGSLC will flag a design/mutation as invalid. 
TTSLC = 7	// integer >= 1 :: Any stretch of consecutive T's larger greater than or equal to TTSLC will flag a design/mutation as invalid. 


HL = 0		//integer >=0 :: Number of bases required between compliment regions before a hairpin becomes stable. 